{"ast":null,"code":"import Actions from \"./actions\";\nconst initState = {\n  identity: \"\",\n  isRoomHost: false,\n  connectOnlyWithAudio: false,\n  roomId: null,\n  showOverlay: true,\n  participants: [],\n  messages: []\n};\n\nconst reducer = (state = initState, action) => {\n  switch (action.type) {\n    case Actions.SET_IS_ROOM_HOST:\n      return { ...state,\n        isRoomHost: action.isRoomHost\n      };\n\n    case Actions.SET_CONNECT_ONLY_WITH_AUDIO:\n      return { ...state,\n        connectOnlyWithAudio: action.onlyWithAudio\n      };\n\n    case Actions.SET_ROOM_ID:\n      return { ...state,\n        roomId: action.roomId\n      };\n\n    case Actions.SET_IDENTITY:\n      return { ...state,\n        identity: action.identity\n      };\n\n    case Actions.SET_SHOW_OVERLAY:\n      return { ...state,\n        showOverlay: action.showOverlay\n      };\n\n    case Actions.SET_PARTICIPANTS:\n      return { ...state,\n        participants: action.participants\n      };\n\n    case Actions.SET_MESSAGES:\n      return { ...state,\n        messages: action.messages\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/development/torum/webRTC-advanced (1)/webRTC-advanced/to-be-deployed/my-app/src/store/reducer.js"],"names":["Actions","initState","identity","isRoomHost","connectOnlyWithAudio","roomId","showOverlay","participants","messages","reducer","state","action","type","SET_IS_ROOM_HOST","SET_CONNECT_ONLY_WITH_AUDIO","onlyWithAudio","SET_ROOM_ID","SET_IDENTITY","SET_SHOW_OVERLAY","SET_PARTICIPANTS","SET_MESSAGES"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,EADM;AAEhBC,EAAAA,UAAU,EAAE,KAFI;AAGhBC,EAAAA,oBAAoB,EAAE,KAHN;AAIhBC,EAAAA,MAAM,EAAE,IAJQ;AAKhBC,EAAAA,WAAW,EAAE,IALG;AAMhBC,EAAAA,YAAY,EAAE,EANE;AAOhBC,EAAAA,QAAQ,EAAE;AAPM,CAAlB;;AAUA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGT,SAAT,EAAoBU,MAApB,KAA+B;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,OAAO,CAACa,gBAAb;AACE,aAAO,EACL,GAAGH,KADE;AAELP,QAAAA,UAAU,EAAEQ,MAAM,CAACR;AAFd,OAAP;;AAIF,SAAKH,OAAO,CAACc,2BAAb;AACE,aAAO,EACL,GAAGJ,KADE;AAELN,QAAAA,oBAAoB,EAAEO,MAAM,CAACI;AAFxB,OAAP;;AAIF,SAAKf,OAAO,CAACgB,WAAb;AACE,aAAO,EACL,GAAGN,KADE;AAELL,QAAAA,MAAM,EAAEM,MAAM,CAACN;AAFV,OAAP;;AAIF,SAAKL,OAAO,CAACiB,YAAb;AACE,aAAO,EACL,GAAGP,KADE;AAELR,QAAAA,QAAQ,EAAES,MAAM,CAACT;AAFZ,OAAP;;AAIF,SAAKF,OAAO,CAACkB,gBAAb;AACE,aAAO,EACL,GAAGR,KADE;AAELJ,QAAAA,WAAW,EAAEK,MAAM,CAACL;AAFf,OAAP;;AAIF,SAAKN,OAAO,CAACmB,gBAAb;AACE,aAAO,EACL,GAAGT,KADE;AAELH,QAAAA,YAAY,EAAEI,MAAM,CAACJ;AAFhB,OAAP;;AAIF,SAAKP,OAAO,CAACoB,YAAb;AACE,aAAO,EACL,GAAGV,KADE;AAELF,QAAAA,QAAQ,EAAEG,MAAM,CAACH;AAFZ,OAAP;;AAIF;AACE,aAAOE,KAAP;AArCJ;AAuCD,CAxCD;;AA0CA,eAAeD,OAAf","sourcesContent":["import Actions from \"./actions\";\r\n\r\nconst initState = {\r\n  identity: \"\",\r\n  isRoomHost: false,\r\n  connectOnlyWithAudio: false,\r\n  roomId: null,\r\n  showOverlay: true,\r\n  participants: [],\r\n  messages: [],\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case Actions.SET_IS_ROOM_HOST:\r\n      return {\r\n        ...state,\r\n        isRoomHost: action.isRoomHost,\r\n      };\r\n    case Actions.SET_CONNECT_ONLY_WITH_AUDIO:\r\n      return {\r\n        ...state,\r\n        connectOnlyWithAudio: action.onlyWithAudio,\r\n      };\r\n    case Actions.SET_ROOM_ID:\r\n      return {\r\n        ...state,\r\n        roomId: action.roomId,\r\n      };\r\n    case Actions.SET_IDENTITY:\r\n      return {\r\n        ...state,\r\n        identity: action.identity,\r\n      };\r\n    case Actions.SET_SHOW_OVERLAY:\r\n      return {\r\n        ...state,\r\n        showOverlay: action.showOverlay,\r\n      };\r\n    case Actions.SET_PARTICIPANTS:\r\n      return {\r\n        ...state,\r\n        participants: action.participants,\r\n      };\r\n    case Actions.SET_MESSAGES:\r\n      return {\r\n        ...state,\r\n        messages: action.messages,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}