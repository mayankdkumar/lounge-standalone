{"ast":null,"code":"var _jsxFileName = \"D:\\\\development\\\\torum\\\\webRTC-advanced (1)\\\\webRTC-advanced\\\\to-be-deployed\\\\my-app\\\\src\\\\RoomPage\\\\RoomPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport ChatSection from \"./ChatSection/ChatSection\";\nimport ParticipantsSection from \"./ParticipantsSection/ParticipantsSection\";\nimport VideoSection from \"./VideoSection/VideoSection\";\nimport RoomLabel from \"./RoomLabel\";\nimport { connect } from \"react-redux\";\nimport * as webRTCHandler from \"../utils/webRTCHandler\";\nimport Overlay from \"./Overlay\";\nimport \"./RoomPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RoomPage = ({\n  roomId,\n  identity,\n  isRoomHost,\n  showOverlay,\n  connectOnlyWithAudio\n}) => {\n  _s();\n\n  useEffect(() => {\n    if (!isRoomHost && !roomId) {\n      const siteUrl = window.location.origin;\n      window.location.href = siteUrl;\n    } else {\n      webRTCHandler.getLocalPreviewAndInitRoomConnection(isRoomHost, identity, roomId, connectOnlyWithAudio);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room_container\",\n    children: [/*#__PURE__*/_jsxDEV(ParticipantsSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoomLabel, {\n      roomId: roomId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), showOverlay && /*#__PURE__*/_jsxDEV(Overlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RoomPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = RoomPage;\n\nconst mapStoreStateToProps = state => {\n  return { ...state\n  };\n};\n\nexport default connect(mapStoreStateToProps)(RoomPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomPage\");","map":{"version":3,"sources":["D:/development/torum/webRTC-advanced (1)/webRTC-advanced/to-be-deployed/my-app/src/RoomPage/RoomPage.js"],"names":["React","useEffect","ChatSection","ParticipantsSection","VideoSection","RoomLabel","connect","webRTCHandler","Overlay","RoomPage","roomId","identity","isRoomHost","showOverlay","connectOnlyWithAudio","siteUrl","window","location","origin","href","getLocalPreviewAndInitRoomConnection","mapStoreStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,mBAAP,MAAgC,2CAAhC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,aAAZ,MAA+B,wBAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,MADgB;AAEhBC,EAAAA,QAFgB;AAGhBC,EAAAA,UAHgB;AAIhBC,EAAAA,WAJgB;AAKhBC,EAAAA;AALgB,CAAD,KAMX;AAAA;;AACJb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACW,UAAD,IAAe,CAACF,MAApB,EAA4B;AAC1B,YAAMK,OAAO,GAAGC,MAAM,CAACC,QAAP,CAAgBC,MAAhC;AACAF,MAAAA,MAAM,CAACC,QAAP,CAAgBE,IAAhB,GAAuBJ,OAAvB;AACD,KAHD,MAGO;AACLR,MAAAA,aAAa,CAACa,oCAAd,CACER,UADF,EAEED,QAFF,EAGED,MAHF,EAIEI,oBAJF;AAMD;AACF,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEJ;AAAnB;AAAA;AAAA;AAAA;AAAA,YAJF,EAKGG,WAAW,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA9BD;;GAAMJ,Q;;KAAAA,Q;;AAgCN,MAAMY,oBAAoB,GAAIC,KAAD,IAAW;AACtC,SAAO,EACL,GAAGA;AADE,GAAP;AAGD,CAJD;;AAMA,eAAehB,OAAO,CAACe,oBAAD,CAAP,CAA8BZ,QAA9B,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport ChatSection from \"./ChatSection/ChatSection\";\r\nimport ParticipantsSection from \"./ParticipantsSection/ParticipantsSection\";\r\nimport VideoSection from \"./VideoSection/VideoSection\";\r\nimport RoomLabel from \"./RoomLabel\";\r\nimport { connect } from \"react-redux\";\r\nimport * as webRTCHandler from \"../utils/webRTCHandler\";\r\nimport Overlay from \"./Overlay\";\r\n\r\nimport \"./RoomPage.css\";\r\n\r\nconst RoomPage = ({\r\n  roomId,\r\n  identity,\r\n  isRoomHost,\r\n  showOverlay,\r\n  connectOnlyWithAudio,\r\n}) => {\r\n  useEffect(() => {\r\n    if (!isRoomHost && !roomId) {\r\n      const siteUrl = window.location.origin;\r\n      window.location.href = siteUrl;\r\n    } else {\r\n      webRTCHandler.getLocalPreviewAndInitRoomConnection(\r\n        isRoomHost,\r\n        identity,\r\n        roomId,\r\n        connectOnlyWithAudio\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"room_container\">\r\n      <ParticipantsSection />\r\n      <VideoSection />\r\n      <ChatSection />\r\n      <RoomLabel roomId={roomId} />\r\n      {showOverlay && <Overlay />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStoreStateToProps = (state) => {\r\n  return {\r\n    ...state,\r\n  };\r\n};\r\n\r\nexport default connect(mapStoreStateToProps)(RoomPage);\r\n"]},"metadata":{},"sourceType":"module"}