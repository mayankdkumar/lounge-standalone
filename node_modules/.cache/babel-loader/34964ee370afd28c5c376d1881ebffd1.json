{"ast":null,"code":"var _jsxFileName = \"D:\\\\development\\\\torum\\\\webRTC-advanced (1)\\\\webRTC-advanced\\\\to-be-deployed\\\\my-app\\\\src\\\\RoomPage\\\\ChatSection\\\\Messages.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Message = ({\n  author,\n  content,\n  sameAuthor,\n  messageCreatedByMe\n}) => {\n  const alignClass = messageCreatedByMe ? \"message_align_right\" : \"message_align_left\";\n  const authorText = messageCreatedByMe ? \"You\" : author;\n  const contentAdditionalStyles = messageCreatedByMe ? \"message_right_styles\" : \"message_left_styles\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message_container ${alignClass}`,\n    children: [!sameAuthor && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message_title\",\n      children: authorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `message_content ${contentAdditionalStyles}`,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Message;\n\nconst Messages = ({\n  messages\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages_container\",\n    children: messages.map((message, index) => {\n      const sameAuthor = index > 0 && message.identity === messages[index - 1].identity;\n      return /*#__PURE__*/_jsxDEV(Message, {\n        author: message.identity,\n        content: message.content,\n        sameAuthor: sameAuthor,\n        messageCreatedByMe: message.messageCreatedByMe\n      }, `${message.content}${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Messages;\n\nconst mapStoreStateToProps = state => {\n  return { ...state\n  };\n};\n\nexport default connect(mapStoreStateToProps)(Messages);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Message\");\n$RefreshReg$(_c2, \"Messages\");","map":{"version":3,"sources":["D:/development/torum/webRTC-advanced (1)/webRTC-advanced/to-be-deployed/my-app/src/RoomPage/ChatSection/Messages.js"],"names":["React","connect","Message","author","content","sameAuthor","messageCreatedByMe","alignClass","authorText","contentAdditionalStyles","Messages","messages","map","message","index","identity","mapStoreStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA,UAAnB;AAA+BC,EAAAA;AAA/B,CAAD,KAAyD;AACvE,QAAMC,UAAU,GAAGD,kBAAkB,GACjC,qBADiC,GAEjC,oBAFJ;AAIA,QAAME,UAAU,GAAGF,kBAAkB,GAAG,KAAH,GAAWH,MAAhD;AAEA,QAAMM,uBAAuB,GAAGH,kBAAkB,GAC9C,sBAD8C,GAE9C,qBAFJ;AAIA,sBACE;AAAK,IAAA,SAAS,EAAG,qBAAoBC,UAAW,EAAhD;AAAA,eACG,CAACF,UAAD,iBAAe;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA,gBAA8BG;AAA9B;AAAA;AAAA;AAAA;AAAA,YADlB,eAEE;AAAG,MAAA,SAAS,EAAG,mBAAkBC,uBAAwB,EAAzD;AAAA,gBAA6DL;AAA7D;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAjBD;;KAAMF,O;;AAmBN,MAAMQ,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACjC,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,cACGA,QAAQ,CAACC,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAChC,YAAMT,UAAU,GACdS,KAAK,GAAG,CAAR,IAAaD,OAAO,CAACE,QAAR,KAAqBJ,QAAQ,CAACG,KAAK,GAAG,CAAT,CAAR,CAAoBC,QADxD;AAGA,0BACE,QAAC,OAAD;AAEE,QAAA,MAAM,EAAEF,OAAO,CAACE,QAFlB;AAGE,QAAA,OAAO,EAAEF,OAAO,CAACT,OAHnB;AAIE,QAAA,UAAU,EAAEC,UAJd;AAKE,QAAA,kBAAkB,EAAEQ,OAAO,CAACP;AAL9B,SACQ,GAAEO,OAAO,CAACT,OAAQ,GAAEU,KAAM,EADlC;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAbA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAnBD;;MAAMJ,Q;;AAqBN,MAAMM,oBAAoB,GAAIC,KAAD,IAAW;AACtC,SAAO,EACL,GAAGA;AADE,GAAP;AAGD,CAJD;;AAMA,eAAehB,OAAO,CAACe,oBAAD,CAAP,CAA8BN,QAA9B,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst Message = ({ author, content, sameAuthor, messageCreatedByMe }) => {\n  const alignClass = messageCreatedByMe\n    ? \"message_align_right\"\n    : \"message_align_left\";\n\n  const authorText = messageCreatedByMe ? \"You\" : author;\n\n  const contentAdditionalStyles = messageCreatedByMe\n    ? \"message_right_styles\"\n    : \"message_left_styles\";\n\n  return (\n    <div className={`message_container ${alignClass}`}>\n      {!sameAuthor && <p className=\"message_title\">{authorText}</p>}\n      <p className={`message_content ${contentAdditionalStyles}`}>{content}</p>\n    </div>\n  );\n};\n\nconst Messages = ({ messages }) => {\n  return (\n    <div className=\"messages_container\">\n      {messages.map((message, index) => {\n        const sameAuthor =\n          index > 0 && message.identity === messages[index - 1].identity;\n\n        return (\n          <Message\n            key={`${message.content}${index}`}\n            author={message.identity}\n            content={message.content}\n            sameAuthor={sameAuthor}\n            messageCreatedByMe={message.messageCreatedByMe}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nconst mapStoreStateToProps = (state) => {\n  return {\n    ...state,\n  };\n};\n\nexport default connect(mapStoreStateToProps)(Messages);\n"]},"metadata":{},"sourceType":"module"}