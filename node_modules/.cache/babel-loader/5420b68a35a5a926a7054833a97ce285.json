{"ast":null,"code":"var _jsxFileName = \"D:\\\\development\\\\torum\\\\webRTC-advanced (1)\\\\webRTC-advanced\\\\to-be-deployed\\\\my-app\\\\src\\\\JoinRoomPage\\\\JoinRoomPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setIsRoomHost } from \"../store/actions\";\nimport JoinRoomTitle from \"./JoinRoomTitle\";\nimport JoinRoomContent from \"./JoinRoomContent\";\nimport \"./JoinRoomPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JoinRoomPage = props => {\n  _s();\n\n  const {\n    setIsRoomHostAction,\n    isRoomHost\n  } = props;\n  const search = useLocation().search;\n  useEffect(() => {\n    const isRoomHost = new URLSearchParams(search).get(\"host\");\n\n    if (isRoomHost) {\n      setIsRoomHostAction(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"join_room_page_container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join_room_page_panel\",\n      children: [/*#__PURE__*/_jsxDEV(JoinRoomTitle, {\n        isRoomHost: isRoomHost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(JoinRoomContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JoinRoomPage, \"ojWRI7mIcH3yyR7IUI2M4vNi0s8=\", false, function () {\n  return [useLocation];\n});\n\n_c = JoinRoomPage;\n\nconst mapStoreStateToProps = state => {\n  return { ...state\n  };\n};\n\nconst mapActionsToProps = dispatch => {\n  return {\n    setIsRoomHostAction: isRoomHost => dispatch(setIsRoomHost(isRoomHost))\n  };\n};\n\nexport default connect(mapStoreStateToProps, mapActionsToProps)(JoinRoomPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"JoinRoomPage\");","map":{"version":3,"sources":["D:/development/torum/webRTC-advanced (1)/webRTC-advanced/to-be-deployed/my-app/src/JoinRoomPage/JoinRoomPage.js"],"names":["React","useEffect","useLocation","connect","setIsRoomHost","JoinRoomTitle","JoinRoomContent","JoinRoomPage","props","setIsRoomHostAction","isRoomHost","search","URLSearchParams","get","mapStoreStateToProps","state","mapActionsToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,OAAO,oBAAP;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM;AAAEC,IAAAA,mBAAF;AAAuBC,IAAAA;AAAvB,MAAsCF,KAA5C;AAEA,QAAMG,MAAM,GAAGT,WAAW,GAAGS,MAA7B;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,UAAU,GAAG,IAAIE,eAAJ,CAAoBD,MAApB,EAA4BE,GAA5B,CAAgC,MAAhC,CAAnB;;AACA,QAAIH,UAAJ,EAAgB;AACdD,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD;AACF,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,UAAU,EAAEC;AAA3B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CApBD;;GAAMH,Y;UAGWL,W;;;KAHXK,Y;;AAsBN,MAAMO,oBAAoB,GAAIC,KAAD,IAAW;AACtC,SAAO,EACL,GAAGA;AADE,GAAP;AAGD,CAJD;;AAMA,MAAMC,iBAAiB,GAAIC,QAAD,IAAc;AACtC,SAAO;AACLR,IAAAA,mBAAmB,EAAGC,UAAD,IAAgBO,QAAQ,CAACb,aAAa,CAACM,UAAD,CAAd;AADxC,GAAP;AAGD,CAJD;;AAMA,eAAeP,OAAO,CAACW,oBAAD,EAAuBE,iBAAvB,CAAP,CAAiDT,YAAjD,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { setIsRoomHost } from \"../store/actions\";\r\nimport JoinRoomTitle from \"./JoinRoomTitle\";\r\nimport JoinRoomContent from \"./JoinRoomContent\";\r\n\r\nimport \"./JoinRoomPage.css\";\r\n\r\nconst JoinRoomPage = (props) => {\r\n  const { setIsRoomHostAction, isRoomHost } = props;\r\n\r\n  const search = useLocation().search;\r\n\r\n  useEffect(() => {\r\n    const isRoomHost = new URLSearchParams(search).get(\"host\");\r\n    if (isRoomHost) {\r\n      setIsRoomHostAction(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"join_room_page_container\">\r\n      <div className=\"join_room_page_panel\">\r\n        <JoinRoomTitle isRoomHost={isRoomHost} />\r\n        <JoinRoomContent />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStoreStateToProps = (state) => {\r\n  return {\r\n    ...state,\r\n  };\r\n};\r\n\r\nconst mapActionsToProps = (dispatch) => {\r\n  return {\r\n    setIsRoomHostAction: (isRoomHost) => dispatch(setIsRoomHost(isRoomHost)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStoreStateToProps, mapActionsToProps)(JoinRoomPage);\r\n"]},"metadata":{},"sourceType":"module"}